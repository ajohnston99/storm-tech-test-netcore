@using Todo.Controllers
@using Todo.Data.Entities
@using Todo.Services
@model Todo.Models.TodoLists.TodoListDetailViewmodel

@{
    ViewData["Title"] = $"List: {Model.Title}";
}

<h2>@ViewData["Title"]</h2>

<div class="col-md-6">

    <ul id="taskList" class="list-group">

        <li class="list-group-item" data-rank="-1">
            <div class="row">
                <div class="col-md-6">
                    <a asp-action="Create" asp-controller="TodoItem" asp-route-todoListId="@Model.TodoListId">
                        <strong>Add New Item</strong>
                    </a>
                </div>
                <div class="col-md-6 text-right">
                    Include Done: <input id="chkShowHideDoneItems" type="checkbox" onclick="showHideDoneItems()" checked />
                    
                    <label for="sortBy">Sort By:</label>
                    <select name="sortBy" id="sortBy" onchange="sortList()">
                        <option value="importance" selected>importance</option>
                        <option value="rank">rank</option>
                    </select>
                </div>
            </div>
        </li>

        @foreach (var item in Model.Items.OrderBy(x => x.Importance))
        {
            string contextualClass;
            switch (item.Importance)
            {
                case Importance.High:
                    contextualClass = "list-group-item-danger";
                    break;
                case Importance.Low:
                    contextualClass = "list-group-item-info";
                    break;
                default:
                    contextualClass = "";
                    break;
            }

            <li class="list-group-item @contextualClass" data-done="@item.IsDone" data-rank="@item.Rank" data-importance="@((int)item.Importance)">
                
                <div class="row">

                <div class="col-md-8">
                    <a asp-action="Edit" asp-controller="TodoItem" asp-route-todoItemId="@item.TodoItemId">

                        @if (item.IsDone)
                        {
                            <s>@item.Title</s>
                        }
                        else
                        {
                            <text>@item.Title</text>
                        }
                    </a>
                </div>

                <div class="col-md-4 text-right">
                    <small>
                        @item.ResponsibleParty.UserName

                        <img src="https://www.gravatar.com/avatar/@Gravatar.GetHash(item.ResponsibleParty.Email)?s=30"/>

                    </small>
                </div>
                </div>
                <div>Rank: @item.Rank</div>

            </li>
        }
    </ul>
</div>

<script>

        $(function () {

        //if the showDoneItems session variable exists then set the checkbox and execute the show/hide function
        //could use session storage, localstorage or a cookie
        let showDone = localStorage.getItem('showDoneItems');
        //alert(data);
        if (showDone === "false")
        {
            document.getElementById("chkShowHideDoneItems").checked = false;
            //set the checkbox to unchecked
        }
        showHideDoneItems();

    });
    
    function showHideDoneItems() {

        let checked = document.getElementById("chkShowHideDoneItems").checked;
        let items = document.querySelectorAll("[data-done='True']");

        localStorage.setItem("showDoneItems", checked);
        
        for (i = 0; i < items.length; i++) {
            toggleDisplay(items[i], checked);
        }
    }

    function toggleDisplay(element, show) {

        if (show === false) {
            element.style.display = "none";
        } else {
            element.style.display = "block";
        }
    }

    function sortList() {

        var sortValue = document.getElementById("sortBy").value;

        var items = $("#taskList").children("li");
        items.sort(function (a, b) {
            return +$(a).data(sortValue) - +$(b).data(sortValue);
        });

        items.appendTo($("#taskList"));

    }

</script>